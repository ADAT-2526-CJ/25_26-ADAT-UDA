name: Generar documentación pydoc

on:
  push:
    branches:
      - main   # cámbialo a master si tu rama principal es master

permissions:
  contents: write   # necesario para publicar en gh-pages

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repo
      - name: Checkout del repo
        uses: actions/checkout@v3

      # 2. Instalar Python
      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Generar documentación con pydoc
      - name: Generar docs con pydoc
        run: |
          mkdir -p docs
          for file in $(find . -type f -name "*.py"); do
            module=$(echo "$file" | sed 's|^\./||;s|/|.|g;s|.py$||')
            echo "Generando doc para módulo: $module"
            python -m pydoc -w "$module" || true
          done
          mv *.html docs/ || true
          touch docs/.nojekyll   # Evita que GitHub Pages intente usar Jekyll

      # 4. Crear un index.html con enlaces a todos los docs
      - name: Generar index.html
        run: |
          echo "<!DOCTYPE html>" > docs/index.html
          echo "<html><head><meta charset='UTF-8'><title>Documentación ADAT</title></head><body>" >> docs/index.html
          echo "<h1>Documentación generada con pydoc</h1>" >> docs/index.html
          echo "<ul>" >> docs/index.html
          for file in docs/*.html; do
            nombre=$(basename "$file")
            if [ "$nombre" != "index.html" ]; then
              echo "<li><a href='$nombre'>$nombre</a></li>" >> docs/index.html
            fi
          done
          echo "</ul></body></html>" >> docs/index.html

      # 5. Publicar en GitHub Pages
      - name: Deploy a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
